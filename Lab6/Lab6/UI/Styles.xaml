<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Подключение шрифтов -->
    <FontFamily x:Key="RegularFontFamily">pack://application:,,,/Lab5;component/UI/EuclidSquare-Regular.ttf#Euclid Square</FontFamily>
    <FontFamily x:Key="BoldFontFamily">pack://application:,,,/Lab5;component/UI/EuclidSquare-Bold.ttf#Euclid Square</FontFamily>
    <FontFamily x:Key="ItalicFontFamily">pack://application:,,,/Lab5;component/UI/EuclidSquare-Italic.ttf#Euclid Square</FontFamily>
    <FontFamily x:Key="LightFontFamily">pack://application:,,,/Lab5;component/UI/EuclidSquare-Light.ttf#Euclid Square</FontFamily>
    
    <!-- Стиль для главного TextBlock с заголовком -->
    <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource BoldFontFamily}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Width" Value="350" />
        <Setter Property="Height" Value="24" />
    </Style>
    
    <!-- Стиль для RadioButton -->
    <Style TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Grid Width="30" Height="30">
                            <Ellipse x:Name="outerCircle" Width="24" Height="24" Stroke="#C3C3C3" StrokeThickness="1" Fill="#F5F5F5"/>
                            <Ellipse x:Name="innerCircle" Width="16" Height="16" Fill="#1F77B4" Visibility="Collapsed"/>
                        </Grid>
                        <TextBlock 
                            Text="{TemplateBinding Content}" 
                            FontSize="16" 
                            FontFamily="{StaticResource RegularFontFamily}" 
                            Margin="10,0,0,0" 
                            VerticalAlignment="Center"/>
                    </StackPanel>

                    <!-- Триггеры для изменения состояния радиокнопки -->
                    <ControlTemplate.Triggers>
                        <!-- Триггер для состояния IsChecked = True -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="innerCircle" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="outerCircle" Property="Stroke" Value="#C3C3C3"/>
                        </Trigger>
                        <!-- Триггер для состояния IsChecked = False -->
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="innerCircle" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="outerCircle" Property="Stroke" Value="#C3C3C3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Стиль для TextBlock -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource RegularFontFamily}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Regular" />
    </Style>
    
    <!-- Стиль для TextBox с закругленными углами -->
    <Style x:Key="RoundedTextBoxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="40" />
        <Setter Property="FontFamily" Value="{StaticResource RegularFontFamily}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="#FFFFFF" /> <!-- Задание белого фона -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="10"> <!-- Закругление углов -->
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsReadOnly" Value="False" />
        <Setter Property="AllowDrop" Value="True" />
    </Style>
    
    <!-- Стиль для OutputTextBox -->
    <Style x:Key="OutputTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource RegularFontFamily}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderBrush" Value="#E1E1E1" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Background" Value="#FFFFFF" /> <!-- Задание белого фона -->
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="2" 
                            CornerRadius="10"> <!-- Закругление углов -->
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsReadOnly" Value="True" />
    </Style>
    
    <!-- Стиль для для ListView -->
    <Style x:Key="DataListViewStyle" TargetType="ListView">
        <!-- Установка основных свойств для ListView -->
        <Setter Property="FontFamily" Value="{StaticResource RegularFontFamily}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderBrush" Value="#C3C3C3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="#FFFFFF" />
        <!-- Переопределение шаблона управления с включением необходимых частей -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ScrollViewer"
                                      Focusable="False"
                                      Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <!-- Добавление GridViewHeaderRowPresenter для отображения заголовков -->
                                <GridViewHeaderRowPresenter Grid.Row="0"
                                                            Columns="{Binding Path=View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{TemplateBinding GridView.ColumnHeaderContainerStyle}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <!-- ItemsPresenter для отображения элементов списка -->
                                <ItemsPresenter Grid.Row="1"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Стилизация заголовков столбцов GridView -->
        <Setter Property="GridView.ColumnHeaderContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type GridViewColumnHeader}">
                    <!-- Установка шрифта и размера для заголовков -->
                    <Setter Property="FontFamily" Value="{StaticResource BoldFontFamily}" />
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Background" Value="#FFFFFF" />
                    <Setter Property="BorderBrush" Value="#C3C3C3" />
                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                </Style>
            </Setter.Value>
        </Setter>
        <!-- Стилизация элементов списка -->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <!-- Установка шрифта и размера для элементов списка -->
                    <Setter Property="FontFamily" Value="{StaticResource RegularFontFamily}" />
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <!-- Сохраняем стандартный шаблон для ListViewItem -->
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для кнопки с закругленными углами --> 
    <Style x:Key="RoundedButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="40" />
        <Setter Property="FontFamily" Value="{StaticResource BoldFontFamily}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#1F77B4" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="10"  
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Стиль для кнопки перезаписи файла --> 
    <Style x:Key="OverwriteFileButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="40" />
        <Setter Property="FontFamily" Value="{StaticResource BoldFontFamily}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Background" Value="#000000" />
        <Setter Property="BorderBrush" Value="#000000" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="10"  
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Стиль для попап файла --> 
    <Style x:Key="PopUp" TargetType="ComboBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="{StaticResource RegularFontFamily}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="360"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="border" 
                                Background="#FFFFFF" 
                                CornerRadius="10" 
                                SnapsToDevicePixels="True" 
                                BorderBrush="#FFFFFF" 
                                BorderThickness="1"
                                Width="360">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="30" />
                                </Grid.ColumnDefinitions>

                                <ToggleButton Focusable="False" 
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                              ClickMode="Press" 
                                              Background="Transparent" 
                                              BorderBrush="Transparent" 
                                              Grid.Column="0" 
                                              HorizontalAlignment="Stretch" 
                                              VerticalAlignment="Stretch"
                                              Cursor="Hand"> <!-- Изменение курсора на "руку" -->
                                    <ContentPresenter x:Name="contentPresenter" 
                                                      Content="{TemplateBinding SelectionBoxItem}" 
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                                      HorizontalAlignment="Left" 
                                                      VerticalAlignment="Center" 
                                                      Margin="10,0,0,0" />
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                    <Setter Property="Cursor" Value="Hand"/> <!-- Изменение курсора -->
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>

                                <!-- Стрелка для раскрытия -->
                                <Path Data="M 0 0 L 4 4 L 8 0 Z" 
                                      Width="10" 
                                      Height="6" 
                                      Fill="Black" 
                                      RenderTransformOrigin="0.5,0.5" 
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"
                                      Grid.Column="1"
                                      Margin="0,0,10,0"/>
                            </Grid>
                        </Border>
                        <Popup Name="Popup" 
                               IsOpen="{TemplateBinding IsDropDownOpen}" 
                               Placement="Bottom" 
                               Focusable="False" 
                               AllowsTransparency="True" 
                               PopupAnimation="Slide">
                            <Border Name="DropDownBorder" 
                                    Background="#FFFFFF" 
                                    BorderBrush="#FFFFFF" 
                                    BorderThickness="1" 
                                    CornerRadius="10"
                                    Width="360">
                                <ScrollViewer Margin="4">
                                    <!-- ItemsPresenter для элементов списка -->
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#C3C3C3"/>
                            <Setter Property="Foreground" Value="#C3C3C3"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#C3C3C3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для элементов списка ComboBox -->
    <Style TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="10,4"/>
        <Setter Property="Cursor" Value="Hand"/> <!-- Установка изменения курсора на "руку" -->
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#C3C3C3"/> <!-- Опционально, можно задать цвет фона при наведении -->
                <Setter Property="Cursor" Value="Hand"/> <!-- Изменение курсора -->
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#C3C3C3"/> <!-- Опционально, цвет фона для выбранного элемента -->
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>